name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build and install common module
        run: mvn -B install --file common/pom.xml

      - name: Build account-service
        run: mvn -B package --file account-service/pom.xml

      - name: Build transaction-service
        run: mvn -B package --file transaction-service/pom.xml

      - name: Build api-gateway
        run: mvn -B package --file api-gateway/pom.xml

      - name: Build eureka-server
        run: mvn -B package --file eureka-server/pom.xml

      - name: Build frontend
        run: mvn -B package --file frontend/pom.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/account-service:latest -f account-service/Dockerfile account-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/transaction-service:latest -f transaction-service/Dockerfile transaction-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest -f api-gateway/Dockerfile api-gateway
          docker build -t ${{ secrets.DOCKER_USERNAME }}/eureka-server:latest -f eureka-server/Dockerfile eureka-server
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest -f frontend/Dockerfile frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/account-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/transaction-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/eureka-server:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  test:
    runs-on: ubuntu-latest
    needs: build

    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Start Docker Compose for Testing
        run: docker-compose -f docker-compose.yml up -d

      - name: Run integration tests
        run: mvn verify

      - name: Stop Docker Compose after Tests
        run: docker-compose -f docker-compose.yml down

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]

    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Start Docker Compose for Deployment
        run: docker-compose -f docker-compose.yml up -d
